@require: class-slydifi/theme/akasaka
@require: figbox/figbox
@require: enumitem/enumitem
@require: code
open FigBox

in

document '<
    +make-title(|
    title={|\SLyDIFi; を使ってみる|};
    author={|もりた|};
    date = {|2022/10/18|};
    |);
    +frame{\SATySFi;で文章を書いてみる}<
        +listing{
          * \SATySFi;は静的型付きが備わった組版処理システム
          * 柔軟で可読性が高い
          * 静的型付けによって詳細なエラー報告を実現
          * \LaTeX; + Ocamlというアイデア
        }

    >

    +frame{文章をコードで書いて何がいいのか}<
        +listing{
            * gitによるバージョン管理
            * デザインを気にしなくてもそれなりにきれいに出力できる
            * 論文サイズでもサクサクかける
            ** wordだと画像張りまくるとすぐフリーズ
            ** D論提出直前にフリーズでデータ破損は結構当たり前だった
        }
    >

    +frame{\SATySFi;のいいところ}<
        +listing{
          * Language Serverによる補完がめっちゃ効く
          ** VSCodeもちゃんと対応してる
          * コンパイルがめっちゃ早い（？）
          ** \LaTeX;に比べたらめっちゃ早い
        }
      
    >
    +frame{画像も貼れる}<
        +listing{
          * 画像も貼れる
        }        
        +fig-center(include-image 200pt `fig/images.jpg`);
      
    >
    +frame{実際のコード}<
        +listing{
          * コードも貼れる
        }
        +code(
            ```
document '<
    +frame{\SATySFi;で文章を書いてみる}<
        +listing{
          * \SATySFi;は静的型付きが備わった組版処理システム
          * 柔軟で可読性が高い
          * 静的型付けによって詳細なエラー報告を実現
          * \LaTeX; + Ocamlというアイデア
        }
    >
>
            ```
        );
      
    >
    +frame{まとめ}<
      +listing{
        * 機能は素晴らしいがまだまだ未成熟
        * 文章をコンパイルするのは素晴らしい
      }
    >
>